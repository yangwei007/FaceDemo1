<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.dao.ManagerDao">
 
	
	<select id="findUserByUsername" resultType="Manager">
		select * from Manager  where  is_delete=0 and user_name=#{0}  
	</select>
	 
    <select id="findAllManager" resultType="Manager">
		select m.*,r.role_name  from manager m  left  join  manager_role r on  m.role_id=r.id  where m.is_delete=0 order by m.add_time   desc
	 </select>
	 
	<select id="findManagerByUserName" resultType="Manager">
		select * from manager  where  user_name=#{0}and   is_delete=0;
	 </select>
	 <select id="findManagerById" resultType="Manager">
	     select m.*,r.role_name  from manager m left  join  manager_role r on m.role_id=r.id     where m.id=#{0} and m.is_delete=0 
	 </select>
	 
	 
	 
	 <select id="findManagerByKeyword" resultType="Manager">
		<!-- select * from manager  where is_delete=0; -->
		select m.*,r.role_name  from manager m  left  join  manager_role r   on m.role_id=r.id  where  m.is_delete=0 and
		 (  m.user_name like CONCAT('%',#{0},'%')   or    m.real_name like CONCAT('%',#{0},'%')   or    r.role_name like CONCAT('%',#{0},'%')  )  
	 </select>
	 
	 <update id="updateManager" parameterType="Manager">
		update manager  
		<set>  
        <if test="salt != null">  
            salt = #{salt},  
        </if> 
        <if test="password != null ">  
            password = #{password},  
        </if> 
         role_id=#{role_id},role_type=#{role_type}, user_type=#{user_type},xzb=#{xzb},real_name=#{real_name},mobile=#{mobile},is_lock=#{is_lock}
       </set> 
       where id=#{id}
		<!-- set 		
		 role_id=#{role_id},password=#{password}, salt=#{salt}, xzb=#{xzb},real_name=#{real_name},mobile=#{mobile},email=#{email},is_lock=#{is_lock} where id=#{id} -->
	</update>
	
	<insert id="insertManager" parameterType="Manager">
		insert into manager (role_id, role_type, user_name,user_type,xzb,password,salt,real_name,mobile,is_lock,add_time) 
		        values(#{role_id},#{role_type},#{user_name},#{user_type},#{xzb}, #{password}, #{salt}, #{real_name},#{mobile},#{is_lock},#{add_time})
	</insert>
	
	  <delete id="deleteManagerBatch" parameterType="int">
        update manager set is_delete=1  where id  in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
	 
</mapper>